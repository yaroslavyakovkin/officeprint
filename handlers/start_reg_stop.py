import os, logging
from aiogram import Bot
from aiogram.types import Message, CallbackQuery
from aiogram.enums import ParseMode
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.sql import db_start, get_verify, create_user, switch_verify, get_username
from util.commands import commands


async def start_bot(bot:Bot):
    await commands(bot)
    await db_start()
    print('BOT STARTED')

async def start(message:Message, bot:Bot):
    user_id = message.from_user.id
    username = message.from_user.username
    verify = await get_verify(message.from_user.id)
    if verify is None:
        await create_user(user_id, username)
        kb = InlineKeyboardBuilder()
        kb.button(text='–†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø', callback_data=f'verify:{user_id}')
        await message.answer('üñ®')
        await message.answer('<i>–í—ã —É –Ω–∞—Å –≤–ø–µ—Ä–≤—ã–µ?\
                             \n<b>–î–æ–∂–¥–∏—Ç–µ—Å—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!</b>\
                             \n–ò–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É</i> <code>/code</code>',
                             parse_mode=ParseMode.HTML)
        await bot.send_message(os.getenv('ADMIN'), f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username}',reply_markup=kb.as_markup())
    elif verify[0] == 1: await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞!\n–ß—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–∞ –ø–µ—á–∞—Ç—å?')

async def secrete_key(message:Message, bot:Bot):
    if message.text.split(' ')[1] == os.getenv('KEY'):
        user_id = message.from_user.id
        username = message.from_user.username
        verify = await get_verify(user_id)
        if verify is None: await create_user(user_id, username); verify = (0,)
        if verify[0] == 1: await message.reply('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø...')
        else:
            await switch_verify(user_id)
            await message.answer('–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω!\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ñ–∞–π–ª—ã!')
            logging.info(f'USER({user_id}) verifed with SECRET-KEY!')
            await bot.send_message(os.getenv('ADMIN'), f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username}, –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –∫–ª—é—á.')
    else: await message.reply('–í–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥...')


async def verify(call:CallbackQuery, bot:Bot):
    user_id=call.data.split(':')[1]
    if await get_verify(user_id)[0] == 1:
        call.message.delete()
    else:
        await switch_verify(user_id)
        await call.message.edit_text(f'–î–æ—Å—Ç—É–ø –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{await get_username(user_id)} —Ä–∞–∑—Ä–µ—à—ë–Ω!')
        logging.info(f'USER({user_id}) verifed by ADMIN!')
        await bot.send_message(user_id, '–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ñ–∞–π–ª—ã!')

async def stop_bot():
    print('BOT STOPPED')